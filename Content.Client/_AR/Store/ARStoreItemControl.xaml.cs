using Content.Shared._AR.Currency;
using Content.Shared._AR.Store.Prototypes;
using Robust.Client.AutoGenerated;
using Robust.Client.GameObjects;
using Robust.Client.Graphics;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;

namespace Content.Client._AR.Store;

[GenerateTypedNameReferences]
public sealed partial class ARStoreItemControl : Control
{
    [Dependency] private readonly IEntityManager _entity = default!;
    [Dependency] private readonly IPrototypeManager _prototype = default!;

    private readonly SpriteSystem _sprite;

    private readonly ARStoreItemEntry _entry;
    private readonly ARStoreItemPrototype _data;

    public ProtoId<ARCurrencyPrototype> Currency => _entry.Currency;

    public ARStoreItemControl(ARStoreItemEntry entry)
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        _sprite = _entity.System<SpriteSystem>();

        _entry = entry;
        _data = _prototype.Index(entry.Id);

        UpdateName();
        UpdateDescription();
        UpdateIcon();
        UpdateDealButton();
    }

    private void UpdateName()
    {
        var name = Loc.GetString(_data.Name);

        if (_data.ProductCount > 1)
            name += $" x{_data.ProductCount}";

        ItemName.Text = name;
    }

    private void UpdateDescription()
    {
        var description = Loc.GetString(_data.Description);

        ItemDescription.SetMessage(description);
    }

    private void UpdateIcon()
    {
        Texture? texture = null;

        if (_data.Icon is not null)
            texture ??= _sprite.Frame0(_data.Icon);

        if (_data.ProductId is not null)
            texture ??= _sprite.GetPrototypeIcon(_data.ProductId).Default;

        ItemIcon.Texture = texture;
    }

    private void UpdateDealButton()
    {
        var currency = _prototype.Index(_entry.Currency);
        var currencyName = Loc.GetString(currency.Name);

        DealButton.Text = $"{currencyName} {_entry.Cost}";
    }

    public void UpdateCurrency(int count)
    {
        DealButton.Disabled = _entry.Cost > count;
    }
}
